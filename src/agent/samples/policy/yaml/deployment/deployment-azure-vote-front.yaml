---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: azure-vote-front
spec:
  replicas: 1
  selector:
    matchLabels:
      app: azure-vote-front
  template:
    metadata:
      labels:
        app: azure-vote-front
      annotations:
        io.katacontainers.config.agent.policy: package agent_policy

import future.keywords.in
import future.keywords.every

import input

# Requests that are always allowed.
default CreateSandboxRequest := true
default DestroySandboxRequest := true
default GetOOMEventRequest := true
default GuestDetailsRequest := true
default OnlineCPUMemRequest := true
default PullImageRequest := true
default RemoveContainerRequest := true
default RemoveStaleVirtiofsShareMountsRequest := true
default SignalProcessRequest := true
default StartContainerRequest := true
default StatsContainerRequest := true
default TtyWinResizeRequest := true
default UpdateEphemeralMountsRequest := true
default UpdateInterfaceRequest := true
default UpdateRoutesRequest := true
default WaitProcessRequest := true

# Configure the Agent to *allow any requests causing a policy failure*.
# This is an unsecure configuration but is useful for allowing unsecure
# pods to start, then connect to them and inspect OPA logs for the root
# cause of a failure.
# default AllowRequestsFailingPolicy := true

######################################################################
CreateContainerRequest {
    some policy_container in policy_data.containers

    policy_oci := policy_container.OCI
    policy_storages := policy_container.storages

    input_oci := input.OCI
    input_storages := input.storages

    print("==============================================")
    print("CreateContainerRequest: oci Version")
    policy_oci.Version     == input_oci.Version

    print("CreateContainerRequest: policy_oci.Root.Readonly")
    policy_oci.Root.Readonly  == input_oci.Root.Readonly

    print("CreateContainerRequest: allow annotations")
    allow_annotations(policy_oci, input_oci)

    print("CreateContainerRequest: allow_by_annotations")
    allow_by_annotations(policy_oci, input_oci, policy_storages, input_storages)

    print("CreateContainerRequest: allow_linux")
    allow_linux(policy_oci, input_oci)

    print("CreateContainerRequest: success")
}

######################################################################
# Reject unexpected annotations.
allow_annotations(policy_oci, input_oci) {
    not input_oci.Annotations
}
allow_annotations(policy_oci, input_oci) {
    input_keys := object.keys(input_oci.Annotations)

    every input_key in input_keys {
        print("allow_annotations: checking input key =", input_key)
        allow_annotation_key(input_key, policy_oci)
    }
}

allow_annotation_key(input_key, policy_oci) {
    startswith(input_key, "io.kubernetes.cri.")
}
allow_annotation_key(input_key, policy_oci) {
    some policy_key, _ in policy_oci.Annotations
    policy_key == input_key
}


######################################################################
# Get "io.kubernetes.cri.sandbox-name", and correlate its value with other
# annotations and process fields.

allow_by_annotations(policy_oci, input_oci, policy_storages, input_storages) {
    print("allow_by_annotations 1: no io.kubernetes.cri.sandbox-name in policy")
    not policy_oci.Annotations["io.kubernetes.cri.sandbox-name"]

    input_sandbox_name := input_oci.Annotations["io.kubernetes.cri.sandbox-name"]

    print("allow_by_annotations 1: allow_by_sandbox_name", input_sandbox_name)
    allow_by_sandbox_name(policy_oci, input_oci, policy_storages, input_storages, input_sandbox_name)

    print("allow_by_annotations 1: success")
}
allow_by_annotations(policy_oci, input_oci, policy_storages, input_storages) {
    print("allow_by_annotations 2: io.kubernetes.cri.sandbox-name")
    policy_sandbox_name := policy_oci.Annotations["io.kubernetes.cri.sandbox-name"]
    input_sandbox_name := input_oci.Annotations["io.kubernetes.cri.sandbox-name"]

    print("allow_by_annotations 2: input sandbox =", input_sandbox_name, "policy sandbox =", policy_sandbox_name)
    allow_sandbox_name(policy_sandbox_name, input_sandbox_name)

    print("allow_by_annotations 2: allow_by_sandbox_name", input_sandbox_name)
    allow_by_sandbox_name(policy_oci, input_oci, policy_storages, input_storages, input_sandbox_name)

    print("allow_by_annotations 2: success")
}

allow_by_sandbox_name(policy_oci, input_oci, policy_storages, input_storages, sandbox_name) {
    print("allow_by_sandbox_name: starting")

    policy_namespace := policy_oci.Annotations["io.kubernetes.cri.sandbox-namespace"]
    input_namespace := input_oci.Annotations["io.kubernetes.cri.sandbox-namespace"]
    print("allow_by_sandbox_name: policy_namespace =", policy_namespace, "input_namespace =", input_namespace)
    policy_namespace == input_namespace

    print("allow_by_sandbox_name: allow_by_container_types")
    allow_by_container_types(policy_oci, input_oci, sandbox_name, policy_namespace)

    print("allow_by_sandbox_name: allow_by_bundle_or_sandbox_id")
    allow_by_bundle_or_sandbox_id(policy_oci, input_oci, policy_storages, input_storages)

    print("allow_by_sandbox_name: allow_process")
    allow_process(policy_oci, input_oci, sandbox_name)

    print("allow_by_sandbox_name: success")
}

allow_sandbox_name(policy_sandbox_name, input_sandbox_name) {
    print("allow_sandbox_name 1: same name")
    policy_sandbox_name == input_sandbox_name
    print("allow_sandbox_name 1: success")
}
allow_sandbox_name(policy_sandbox_name, input_sandbox_name) {
    print("allow_sandbox_name 2: generated name")

    # TODO: should generated names be handled differently?
    contains(policy_sandbox_name, "$(generated-name)")

    print("allow_sandbox_name 2: success")
}
######################################################################
# - Check that the "io.kubernetes.cri.container-type" and
#   "io.katacontainers.pkg.oci.container_type" annotations
#   designate the expected type - either a "sandbox" or a
#   "container" type.
#
# - Then, validate other annotations based on the actual
#   "sandbox" or "container" value from the input container.

allow_by_container_types(policy_oci, input_oci, sandbox_name, sandbox_namespace) {
    print("allow_by_container_types: checking io.kubernetes.cri.container-type")
    
    policy_cri_type := policy_oci.Annotations["io.kubernetes.cri.container-type"]
    print("allow_by_container_types: policy type =", policy_cri_type)
    
    input_cri_type := input_oci.Annotations["io.kubernetes.cri.container-type"]
    print("allow_by_container_types: input type =", input_cri_type)
    
    policy_cri_type == input_cri_type

    print("allow_by_container_types: allow_by_container_type")
    allow_by_container_type(input_cri_type, policy_oci, input_oci, sandbox_name, sandbox_namespace)

    print("allow_by_container_types: success")
}

# Rules applicable to the "sandbox" container type
allow_by_container_type(input_cri_type, policy_oci, input_oci, sandbox_name, sandbox_namespace) {
    print("allow_by_container_type 1: input_cri_type =", input_cri_type)
    input_cri_type == "sandbox"

    input_kata_type := input_oci.Annotations["io.katacontainers.pkg.oci.container_type"]
    print("allow_by_container_type 1: input container type", input_kata_type)
    input_kata_type == "pod_sandbox"

    allow_sandbox_container_name(policy_oci, input_oci)
    allow_sandbox_net_namespace(policy_oci, input_oci)
    allow_sandbox_log_directory(policy_oci, input_oci, sandbox_name, sandbox_namespace)

    print("allow_by_container_type 1: success")
}

# Rules applicable to the "container" container type
allow_by_container_type(input_cri_type, policy_oci, input_oci, sandbox_name, sandbox_namespace) {
    print("allow_by_container_type 2: input_cri_type =", input_cri_type)
    input_cri_type == "container"

    input_kata_type := input_oci.Annotations["io.katacontainers.pkg.oci.container_type"]
    print("allow_by_container_type 2: input type", input_kata_type)
    input_kata_type == "pod_container"

    print("allow_by_container_type 2: allow_container_name")
    allow_container_name(policy_oci, input_oci)

    print("allow_by_container_type 2: allow_net_namespace")
    allow_net_namespace(policy_oci, input_oci)

    print("allow_by_container_type 2: allow_log_directory")
    allow_log_directory(policy_oci, input_oci)

    print("allow_by_container_type 2: success")
}

######################################################################
# "io.kubernetes.cri.container-name" annotation

allow_sandbox_container_name(policy_oci, input_oci) {
    print("allow_sandbox_container_name: container_annotation_missing")
    container_annotation_missing(policy_oci, input_oci, "io.kubernetes.cri.container-name")
    print("allow_sandbox_container_name: success")
}

allow_container_name(policy_oci, input_oci) {
    print("allow_container_name: allow_container_annotation")
    allow_container_annotation(policy_oci, input_oci, "io.kubernetes.cri.container-name")
    print("allow_container_name: success")
}

######################################################################
# Annotions required for "container" type, and not allowed for "sandbox" type.

container_annotation_missing(policy_oci, input_oci, annotation_key) {
    print("container_annotation_missing:", annotation_key)

    not policy_oci.Annotations[annotation_key]
    not input_oci.Annotations[annotation_key]

    print("container_annotation_missing: success")
}

allow_container_annotation(policy_oci, input_oci, annotation_key) {
    print("allow_container_annotation: annotation_key =", annotation_key)

    policy_value := policy_oci.Annotations[annotation_key]
    print("allow_container_annotation: policy_value =", policy_value)

    input_value := input_oci.Annotations[annotation_key]
    print("allow_container_annotation: input_value = ", input_value)

    policy_value == input_value
    print("allow_container_annotation: success")
}

######################################################################
# "nerdctl/network-namespace" annotation

allow_sandbox_net_namespace(policy_oci, input_oci) {
    print("allow_sandbox_net_namespace: start")

    policy_namespace := policy_oci.Annotations["nerdctl/network-namespace"]
    print("allow_sandbox_net_namespace: policy_namespace =", policy_namespace)

    input_namespace := input_oci.Annotations["nerdctl/network-namespace"]
    print("allow_sandbox_net_namespace: input_namespace =", input_namespace)

    regex.match(policy_namespace, input_namespace)
    print("allow_sandbox_net_namespace: success")
}

allow_net_namespace(policy_oci, input_oci) {
    print("allow_net_namespace: start")

    not policy_oci.Annotations["nerdctl/network-namespace"]
    not input_oci.Annotations["nerdctl/network-namespace"]

    print("allow_net_namespace: success")
}

######################################################################
# "io.kubernetes.cri.sandbox-log-directory" annotation

allow_sandbox_log_directory(policy_oci, input_oci, sandbox_name, sandbox_namespace) {
    print("allow_sandbox_log_directory: start")

    policy_log_directory := policy_oci.Annotations["io.kubernetes.cri.sandbox-log-directory"]
    directory_regex_tmp := replace(policy_log_directory, "$(sandbox-name)", sandbox_name)
    directory_regex := replace(directory_regex_tmp, "$(sandbox-namespace)", sandbox_namespace)
    print("allow_sandbox_log_directory: policy regex =", directory_regex)

    input_log_directory := input_oci.Annotations["io.kubernetes.cri.sandbox-log-directory"]
    print("allow_sandbox_log_directory: input =", input_log_directory)

    regex.match(directory_regex, input_log_directory)

    print("allow_sandbox_log_directory: success")
}

allow_log_directory(policy_oci, input_oci) {
    not policy_oci.Annotations["io.kubernetes.cri.sandbox-log-directory"]
    not input_oci.Annotations["io.kubernetes.cri.sandbox-log-directory"]
}

######################################################################
# Validate the linux fields from config.json.

allow_linux(policy_oci, input_oci) {
    print("allow_linux: policy namespaces =", policy_oci.Linux.Namespaces)
    print("allow_linux: input namespaces =", input_oci.Linux.Namespaces)
    policy_oci.Linux.Namespaces     == input_oci.Linux.Namespaces

    print("allow_linux: allow_masked_paths")
    allow_masked_paths(policy_oci, input_oci)

    print("allow_linux: allow_readonly_paths")
    allow_readonly_paths(policy_oci, input_oci)

    print("allow_linux: success")
}

######################################################################
allow_masked_paths(policy_oci, input_oci) {
    print("allow_masked_paths 1: policy maskedPaths =", policy_oci.Linux.MaskedPaths)
    print("allow_masked_paths 1: input maskedPaths =", input_oci.Linux.MaskedPaths)

    allow_masked_paths_array(policy_oci.Linux.MaskedPaths, input_oci.Linux.MaskedPaths)

    print("allow_masked_paths 1: success")
}
allow_masked_paths(policy_oci, input_oci) {
    print("allow_masked_paths 2: no maskedPaths")

    not policy_oci.Linux.MaskedPaths
    not input_oci.Linux.MaskedPaths

    print("allow_masked_paths 2: success")
}

# All the policy masked paths must be masked in the input data too.
# Input is allowed to have more masked paths than the policy.
allow_masked_paths_array(policy_array, input_array) {
    every policy_element in policy_array {
        allow_masked_path(policy_element, input_array)
    }
}

allow_masked_path(policy_element, input_array) {
    print("allow_masked_path: policy_element =", policy_element)

    some input_element in input_array
    policy_element == input_element

    print("allow_masked_path: success")
}

######################################################################
allow_readonly_paths(policy_oci, input_oci) {
    print("allow_readonly_paths 1: policy readonlyPaths =", policy_oci.Linux.ReadonlyPaths)
    print("allow_readonly_paths 1: input readonlyPaths =", input_oci.Linux.ReadonlyPaths)

    allow_readonly_paths_array(policy_oci.Linux.ReadonlyPaths, input_oci.Linux.ReadonlyPaths, input_oci.Linux.MaskedPaths)

    print("allow_readonly_paths 1: success")
}
allow_readonly_paths(policy_oci, input_oci) {
    print("allow_readonly_paths 2: no readonlyPaths")

    not policy_oci.Linux.ReadonlyPaths
    not input_oci.Linux.ReadonlyPaths

    print("allow_readonly_paths 2: success")
}

# All the policy readonly paths must be either:
# - Present in the input readonly paths, or
# - Present in the input masked paths.
# Input is allowed to have more readonly paths than the policy.
allow_readonly_paths_array(policy_array, input_array, masked_paths) {
    every policy_element in policy_array {
        allow_readonly_path(policy_element, input_array, masked_paths)
    }
}

allow_readonly_path(policy_element, input_array, masked_paths) {
    print("allow_readonly_path 1: policy_element =", policy_element)

    some input_element in input_array
    policy_element == input_element

    print("allow_readonly_path 1: success")
}
allow_readonly_path(policy_element, input_array, masked_paths) {
    print("allow_readonly_path 2: policy_element =", policy_element)

    some input_masked in masked_paths
    policy_element == input_masked

    print("allow_readonly_path 2: success")
}

######################################################################
# Get the input:
#
# - bundle_id from "io.katacontainers.pkg.oci.bundle_path"
# - sandbox_id from "io.kubernetes.cri.sandbox-id"
#
# and check their consistency with other rules.

allow_by_bundle_or_sandbox_id(policy_oci, input_oci, policy_storages, input_storages) {
    print("allow_by_bundle_or_sandbox_id: checking io.katacontainers.pkg.oci.bundle_path")
    bundle_path := input_oci.Annotations["io.katacontainers.pkg.oci.bundle_path"]
    bundle_id := replace(bundle_path, "/run/containerd/io.containerd.runtime.v2.task/k8s.io/", "")

    policy_sandbox_regex := policy_oci.Annotations["io.kubernetes.cri.sandbox-id"]
    sandbox_id := input_oci.Annotations["io.kubernetes.cri.sandbox-id"]

    print("allow_by_bundle_or_sandbox_id: regex.match sandbox_id =", sandbox_id, "regex =", policy_sandbox_regex)
    regex.match(policy_sandbox_regex, sandbox_id)

    print("allow_by_bundle_or_sandbox_id: allow_root_path")
    allow_root_path(policy_oci, input_oci, bundle_id)

    every input_mount in input.OCI.Mounts {
        print("allow_by_bundle_or_sandbox_id: allow_mount")
        allow_mount(policy_oci, input_mount, bundle_id, sandbox_id)
    }

    print("allow_by_bundle_or_sandbox_id: allow_storages")
    allow_storages(policy_storages, input_storages, bundle_id, sandbox_id)

    print("allow_by_bundle_or_sandbox_id: success")
}

######################################################################
# Validate the process fields from config.json.

allow_process(policy_oci, input_oci, sandbox_name) {
    policy_process := policy_oci.Process
    input_process := input_oci.Process

    print("allow_process: input terminal =", input_process.Terminal, "policy terminal =", policy_process.Terminal)
    policy_process.Terminal         == input_process.Terminal

    print("allow_process: input cwd =", input_process.Cwd, "policy cwd =", policy_process.Cwd)
    policy_process.Cwd              == input_process.Cwd

    print("allow_process: input capabilities =", input_process.Capabilities)
    print("allow_process: policy capabilities =", policy_process.Capabilities)
    policy_process.Capabilities     == input_process.Capabilities

    print("allow_process: input noNewPrivileges =", input_process.NoNewPrivileges, "policy noNewPrivileges =", policy_process.NoNewPrivileges)
    policy_process.NoNewPrivileges  == input_process.NoNewPrivileges

    print("allow_process: allow_user")
    allow_user(policy_process, input_process)

    print("allow_process: allow_args")
    allow_args(policy_process, input_process, sandbox_name)

    print("allow_process: allow_env")
    allow_env(policy_process, input_process, sandbox_name)

    print("allow_process: success")
}

######################################################################
# OCI process.User field

allow_user(policy_process, input_process) {
    policy_user := policy_process.User
    input_user := input_process.User

    # TODO: track down the reason for mcr.microsoft.com/oss/bitnami/redis:6.0.8 being
    #       executed with uid = 0 despite having "User": "1001" in its container image
    #       config.
    #print("allow_user: input uid =", input_user.UID, "policy uid =", policy_user.UID)
    #policy_user.UID                 == input_user.UID

    # TODO: track down the reason for registry.k8s.io/pause:3.9 being
    #       executed with gid = 0 despite having "65535:65535" in its container image
    #       config.
    #print("allow_user: input gid =", input_user.GID, "policy gid =", policy_user.GID)
    #policy_user.GID                 == input_user.GID

    # TODO: compare the additionalGids field too after computing its value
    # based on /etc/passwd and /etc/group from the container image.
}

######################################################################
# OCI process.Args field

allow_args(policy_process, input_process, sandbox_name) {
    print("allow_args 1: no args")

    not policy_process.Args
    not input_process.Args

    print("allow_args 1: success")
}
allow_args(policy_process, input_process, sandbox_name) {
    print("allow_args 2: policy args =", policy_process.Args)
    print("allow_args 2: input args =", input_process.Args)

    count(policy_process.Args) == count(input_process.Args)

    every i, input_arg in input_process.Args {
        allow_arg(i, input_arg, policy_process, sandbox_name)
    }

    print("allow_args 2: success")
}

allow_arg(i, input_arg, policy_process, sandbox_name) {
    print("allow_arg 1: i =", i, "input_arg =", input_arg, "policy_arg =", policy_process.Args[i])

    policy_arg := replace(policy_process.Args[i], "$$", "$")
    input_arg == policy_arg

    print("allow_arg 1: success")
}
allow_arg(i, input_arg, policy_process, sandbox_name) {
    print("allow_arg 2: i =", i, "input_arg =", input_arg, "policy_arg =", policy_process.Args[i])

    # TODO: can $(node-name) be handled better?
    contains(policy_process.Args[i], "$(node-name)")

    print("allow_arg 2: success")
}
allow_arg(i, input_arg, policy_process, sandbox_name) {
    print("allow_arg 3: i =", i, "input_arg =", input_arg, "policy_arg =", policy_process.Args[i])

    policy_arg := replace(policy_process.Args[i], "$$", "$")
    expanded_arg = replace(policy_arg, "$(sandbox-name)", sandbox_name)
    print("allow_arg 3: expanded policy_arg =", expanded_arg)
    expanded_arg == input_arg

    print("allow_arg 3: success")
}

######################################################################
# OCI process.Env field

allow_env(policy_process, input_process, sandbox_name) {
    print("allow_env: policy env =", policy_process.Env)

    every env_var in input_process.Env {
        print("allow_env => allow_env_var:", env_var)
        allow_env_var(policy_process, input_process, env_var, sandbox_name)
    }

    print("allow_env: success")
}

# Allow input env variables that are present in the policy data too.
allow_env_var(policy_process, input_process, env_var, sandbox_name) {
    print("allow_env_var 1: some policy_env_var == env_var")

    some policy_env_var in policy_process.Env
    policy_env_var == env_var

    print("allow_env_var 1: success")
}

# Match input with one of the policy variables, after substituting $(sandbox-name).
allow_env_var(policy_process, input_process, env_var, sandbox_name) {
    print("allow_env_var 2: replace $(sandbox-name)")

    some policy_env_var in policy_process.Env
    policy_var = replace(policy_env_var, "$(sandbox-name)", sandbox_name)

    print("allow_env_var 2: input =", env_var, "policy =", policy_var)
    policy_var == env_var

    print("allow_env_var 2: success")
}

# Allow service-related env variables:

# "KUBERNETES_PORT_443_TCP_PROTO=tcp"
allow_env_var(policy_process, input_process, env_var, sandbox_name) {
    print("allow_env_var 3: KUBERNETES_PORT_443_TCP_PROTO=tcp")

    name_value := split(env_var, "=")
    count(name_value) == 2

    name_value[1] == "tcp"

    name_components = split(name_value[0], "_")
    components_count := count(name_components)
    components_count >= 5
    name_components[components_count - 1] == "PROTO"
    name_components[components_count - 2] == "TCP"
    name_components[components_count - 4] == "PORT"
    port := name_components[components_count - 3]
    is_port(port)

    print("allow_env_var 3: success")
}

# "KUBERNETES_PORT_443_TCP_PORT=443"
allow_env_var(policy_process, input_process, env_var, sandbox_name) {
    print("allow_env_var 4: KUBERNETES_PORT_443_TCP_PORT=443")

    name_value := split(env_var, "=")
    count(name_value) == 2

    port = name_value[1]
    is_port(port)

    name_components = split(name_value[0], "_")
    components_count := count(name_components)
    components_count >= 5
    name_components[components_count - 1] == "PORT"
    name_components[components_count - 2] == "TCP"
    name_components[components_count - 3] == port
    name_components[components_count - 4] == "PORT"

    print("allow_env_var 4: success")
}

# "KUBERNETES_PORT_443_TCP_ADDR=10.0.0.1"
allow_env_var(policy_process, input_process, env_var, sandbox_name) {
    print("allow_env_var 5: KUBERNETES_PORT_443_TCP_ADDR=10.0.0.1")

    name_value := split(env_var, "=")
    count(name_value) == 2

    is_ip(name_value[1])

    name_components = split(name_value[0], "_")
    components_count := count(name_components)
    components_count >= 5
    name_components[components_count - 1] == "ADDR"
    name_components[components_count - 2] == "TCP"
    name_components[components_count - 4] == "PORT"
    port := name_components[components_count - 3]
    is_port(port)

    print("allow_env_var 5: success")
}

# "KUBERNETES_SERVICE_HOST=10.0.0.1",
allow_env_var(policy_process, input_process, env_var, sandbox_name) {
    print("allow_env_var 6: KUBERNETES_SERVICE_HOST=10.0.0.1")

    name_value := split(env_var, "=")
    count(name_value) == 2

    is_ip(name_value[1])

    name_components = split(name_value[0], "_")
    components_count := count(name_components)
    components_count >= 3
    name_components[components_count - 1] == "HOST"
    name_components[components_count - 2] == "SERVICE"

    print("allow_env_var 6: success")
}

# "KUBERNETES_SERVICE_PORT=443",
allow_env_var(policy_process, input_process, env_var, sandbox_name) {
    print("allow_env_var 7: KUBERNETES_SERVICE_PORT=443")

    name_value := split(env_var, "=")
    count(name_value) == 2

    is_port(name_value[1])

    name_components = split(name_value[0], "_")
    components_count := count(name_components)
    components_count >= 3
    name_components[components_count - 1] == "PORT"
    name_components[components_count - 2] == "SERVICE"

    print("allow_env_var 7: success")
}

# "KUBERNETES_SERVICE_PORT_HTTPS=443",
allow_env_var(policy_process, input_process, env_var, sandbox_name) {
    print("allow_env_var 8: KUBERNETES_SERVICE_PORT_HTTPS=443")

    name_value := split(env_var, "=")
    count(name_value) == 2

    is_port(name_value[1])

    name_components = split(name_value[0], "_")
    components_count := count(name_components)
    components_count >= 4
    name_components[components_count - 1] == "HTTPS"
    name_components[components_count - 2] == "PORT"
    name_components[components_count - 3] == "SERVICE"

    print("allow_env_var 8: success")
}

# "KUBERNETES_PORT=tcp://10.0.0.1:443",
allow_env_var(policy_process, input_process, env_var, sandbox_name) {
    print("allow_env_var 9: KUBERNETES_PORT=tcp://10.0.0.1:443")

    name_value := split(env_var, "=")
    count(name_value) == 2

    is_tcp_uri(name_value[1])

    name_components = split(name_value[0], "_")
    components_count := count(name_components)
    components_count >= 2
    name_components[components_count - 1] == "PORT"

    print("allow_env_var 9: success")
}

# "KUBERNETES_PORT_443_TCP=tcp://10.0.0.1:443",
allow_env_var(policy_process, input_process, env_var, sandbox_name) {
    print("allow_env_var 10: KUBERNETES_PORT_443_TCP=tcp://10.0.0.1:443")

    name_value := split(env_var, "=")
    count(name_value) == 2

    name_components = split(name_value[0], "_")
    components_count := count(name_components)
    components_count >= 4
    name_components[components_count - 1] == "TCP"
    name_components[components_count - 3] == "PORT"
    port := name_components[components_count - 2]
    is_port(port)

    is_tcp_uri(name_value[1])
    value_components = split(name_value[1], ":")
    count(value_components) == 3
    value_components[2] == port

    print("allow_env_var 10: success")
}

# Allow fieldRef "fieldPath: status.podIP" values.
allow_env_var(policy_process, input_process, env_var, sandbox_name) {
    print("allow_env_var 11: fieldPath: status.podIP")

    name_value := split(env_var, "=")
    count(name_value) == 2
    is_ip(name_value[1])

    some policy_env_var in policy_process.Env
    allow_pod_ip_var(name_value[0], policy_env_var)

    print("allow_env_var 11: success")
}

# Allow common fieldRef variables.
allow_env_var(policy_process, input_process, env_var, sandbox_name) {
    print("allow_env_var 12: fieldRef")

    name_value := split(env_var, "=")
    count(name_value) == 2

    some policy_env_var in policy_process.Env
    policy_name_value := split(policy_env_var, "=")
    count(policy_name_value) == 2

    policy_name_value[0] == name_value[0]

    # TODO: should these be handled in a different way?
    always_allowed := ["$(host-name)", "$(node-name)", "$(pod-uid)"]
    some allowed in always_allowed
    contains(policy_name_value[1], allowed)

    print("allow_env_var 12: success")
}

# Allow fieldRef "fieldPath: status.hostIP" values.
allow_env_var(policy_process, input_process, env_var, sandbox_name) {
    print("allow_env_var 13: fieldPath: status.hostIP")

    name_value := split(env_var, "=")
    count(name_value) == 2
    is_ip(name_value[1])

    some policy_env_var in policy_process.Env
    allow_host_ip_var(name_value[0], policy_env_var)

    print("allow_env_var 13: success")
}

# Allow resourceFieldRef values (e.g., "limits.cpu").
allow_env_var(policy_process, input_process, env_var, sandbox_name) {
    print("allow_env_var 14: resourceFieldRef")

    name_value := split(env_var, "=")
    count(name_value) == 2

    some policy_env_var in policy_process.Env
    policy_name_value := split(policy_env_var, "=")
    count(policy_name_value) == 2

    policy_name_value[0] == name_value[0]

    # TODO: should these be handled in a different way?
    always_allowed = ["$(resource-field)", "$(todo-annotation)"]
    some allowed in always_allowed
    contains(policy_name_value[1], allowed)

    print("allow_env_var 14: success")
}


allow_pod_ip_var(var_name, policy_env_var) {
    print("allow_pod_ip_var: var_name =", var_name, "policy_env_var =", policy_env_var)

    policy_name_value := split(policy_env_var, "=")
    count(policy_name_value) == 2

    policy_name_value[0] == var_name
    policy_name_value[1] == "$(pod-ip)"

    print("allow_pod_ip_var: success")
}

allow_host_ip_var(var_name, policy_env_var) {
    print("allow_host_ip_var: var_name =", var_name, "policy_env_var =", policy_env_var)

    policy_name_value := split(policy_env_var, "=")
    count(policy_name_value) == 2

    policy_name_value[0] == var_name
    policy_name_value[1] == "$(host-ip)"

    print("allow_host_ip_var: success")
}

is_ip(value) {
    bytes = split(value, ".")
    count(bytes) == 4

    is_ip_first_byte(bytes[0])
    is_ip_other_byte(bytes[1])
    is_ip_other_byte(bytes[2])
    is_ip_other_byte(bytes[3])
}
is_ip_first_byte(component) {
    number = to_number(component)
    number >= 1
    number <= 255
}
is_ip_other_byte(component) {
    number = to_number(component)
    number >= 0
    number <= 255
}

is_port(value) {
    number = to_number(value)
    number >= 1
    number <= 65635
}

# E.g., "tcp://10.0.0.1:443"
is_tcp_uri(value) {
    components = split(value, "//")
    count(components) == 2
    components[0] == "tcp:"

    ip_and_port = split(components[1], ":")
    count(ip_and_port) == 2
    is_ip(ip_and_port[0])
    is_port(ip_and_port[1])
}

######################################################################
# OCI root.Path

allow_root_path(policy_oci, input_oci, bundle_id) {
    policy_path := replace(policy_oci.Root.Path, "$(bundle-id)", bundle_id)
    policy_path == input_oci.Root.Path
}

######################################################################
# mounts

allow_mount(policy_oci, input_mount, bundle_id, sandbox_id) {
    print("allow_mount: input_mount.destination =", input_mount.destination)

    some policy_mount in policy_oci.Mounts
    policy_mount_allows(policy_mount, input_mount, bundle_id, sandbox_id)

    # TODO: are there any other required policy checks for mounts - e.g.,
    #       multiple mounts with same source or destination?
}

policy_mount_allows(policy_mount, input_mount, bundle_id, sandbox_id) {
    print("policy_mount_allows 1: policy_mount =", policy_mount)
    print("policy_mount_allows 1: input_mount =", input_mount)

    policy_mount == input_mount

    print("policy_mount_allows 1 success")
}
policy_mount_allows(policy_mount, input_mount, bundle_id, sandbox_id) {
    print("policy_mount_allows 2: input_mount.destination =", input_mount.destination, "policy_mount.destination =", policy_mount.destination)
    policy_mount.destination    == input_mount.destination

    print("policy_mount_allows 2: input type =", input_mount.type_, "policy type =", policy_mount.type_)
    policy_mount.type_           == input_mount.type_

    print("policy_mount_allows 2: input options =", input_mount.options)
    print("policy_mount_allows 2: policy options =", policy_mount.options)
    policy_mount.options        == input_mount.options

    print("policy_mount_allows 2: policy_mount_source_allows")
    policy_mount_source_allows(policy_mount, input_mount, bundle_id, sandbox_id)

    print("policy_mount_allows 2: success")
}

policy_mount_source_allows(policy_mount, input_mount, bundle_id, sandbox_id) {
    # E.g., "source": "^/run/kata-containers/shared/containers/$(bundle-id)-[a-z0-9]{16}-resolv.conf$",
    policy_source_regex := replace(policy_mount.source, "$(bundle-id)", bundle_id)
    print("policy_mount_source_allows 1: policy_source_regex =", policy_source_regex)

    print("policy_mount_source_allows 1: input_mount.source=", input_mount.source)
    regex.match(policy_source_regex, input_mount.source)

    print("policy_mount_source_allows 1: success")
}
policy_mount_source_allows(policy_mount, input_mount, bundle_id, sandbox_id) {
    # E.g., "source": "^/run/kata-containers/shared/containers/$(sandbox-id)/rootfs/local/data$",
    policy_source_regex := replace(policy_mount.source, "$(sandbox-id)", sandbox_id)

    print("policy_mount_source_allows 2: policy_source_regex =", policy_source_regex, "input_mount.source=", input_mount.source)
    regex.match(policy_source_regex, input_mount.source)

    print("policy_mount_source_allows 2: success")
}

######################################################################
# Storages

allow_storages(policy_storages, input_storages, bundle_id, sandbox_id) {
    policy_count := count(policy_storages)
    input_count := count(input_storages)
    print("allow_storages: policy_count =", policy_count, "input_count =", input_count)
    policy_count == input_count

    some i, input_storage in input_storages
    allow_input_storage(i, input_storage, policy_storages, policy_count, bundle_id, sandbox_id)

    print("allow_storages: success")
}

allow_input_storage(i, input_storage, policy_storages, count, bundle_id, sandbox_id) {
    print("allow_input_storage: i =", i, "input_storage =", input_storage)

    policy_storage := policy_storages[i]
    print("allow_input_storage: i =", i, "policy_storage =", policy_storage)

    storages_match(policy_storage, input_storage, bundle_id, sandbox_id)

    # Stop when reaching the last element of the storages array.
    i == count - 1
}

storages_match(policy_storage, input_storage, bundle_id, sandbox_id) {
    policy_storage.driver           == input_storage.driver
    policy_storage.driver_options   == input_storage.driver_options
    policy_storage.options          == input_storage.options
    policy_storage.fs_group         == input_storage.fs_group

    allow_mount_point(policy_storage, input_storage, bundle_id, sandbox_id)

    # TODO: validate the source field too.

    print("storages_match: success")
}

allow_mount_point(policy_storage, input_storage, bundle_id, sandbox_id) {
    print("allow_mount_point 1: fstype == tar")
    policy_storage.fstype == "tar"

    print("allow_mount_point 1: policy_storage.mount_point == input_storage.mount_point")
    policy_storage.mount_point == input_storage.mount_point

    print("allow_mount_point 1: success")
}
allow_mount_point(policy_storage, input_storage, bundle_id, sandbox_id) {
    print("allow_mount_point 2: fstype == tar-overlay")
    policy_storage.fstype == "tar-overlay"

    policy_mount_point := replace(policy_storage.mount_point, "$(bundle-id)", bundle_id)
    print("allow_mount_point 2: policy_mount_point =", policy_mount_point)

    policy_mount_point == input_storage.mount_point

    print("allow_mount_point 2: success")
}
allow_mount_point(policy_storage, input_storage, bundle_id, sandbox_id) {
    print("allow_mount_point 3: fstype == local")
    policy_storage.fstype == "local"

    mount_point_regex := replace(policy_storage.mount_point, "$(sandbox-id)", sandbox_id)
    print("allow_mount_point 3: mount_point_regex =", mount_point_regex)

    regex.match(mount_point_regex, input_storage.mount_point)

    print("allow_mount_point 3: success")
}
allow_mount_point(policy_storage, input_storage, bundle_id, sandbox_id) {
    print("allow_mount_point 4: fstype == bind")
    policy_storage.fstype == "bind"

    mount_point_regex := replace(policy_storage.mount_point, "$(bundle-id)", bundle_id)
    print("allow_mount_point 4: mount_point_regex =", mount_point_regex)

    regex.match(mount_point_regex, input_storage.mount_point)

    print("allow_mount_point 4: success")
}

######################################################################
CopyFileRequest {
    print("CopyFileRequest: input.path =", input.path)

    some policy_regex in policy_data.request_defaults.CopyFileRequest
    regex.match(policy_regex, input.path)

    print("CopyFileRequest: success")
}

ExecProcessRequest {
    print("ExecProcessRequest 1: input =", input)

    input_command = concat(" ", input.process.Args)

    some policy_command in policy_data.request_defaults.ExecProcessRequest
    policy_command == input_command

    print("ExecProcessRequest 1: success")
}
ExecProcessRequest {
    print("ExecProcessRequest 2: input =", input)

    # TODO: match input container ID with its corresponding container.exec_commands.
    input_command = concat(" ", input.process.Args)

    some container in policy_data.containers
    some policy_command in container.exec_commands
    print("ExecProcessRequest 2: policy_command =", policy_command)

    # TODO: should other input data fields be validated as well?
    policy_command == input_command

    print("ExecProcessRequest 2: success")
}

ReadStreamRequest {
    policy_data.request_defaults.ReadStreamRequest == true
}

WriteStreamRequest {
    policy_data.request_defaults.WriteStreamRequest == true
}

policy_data := {
  "containers": [
    {
      "OCI": {
        "Version": "1.1.0-rc.1",
        "Process": {
          "Terminal": false,
          "User": {
            "UID": 65535,
            "GID": 65535,
            "AdditionalGids": [],
            "Username": ""
          },
          "Args": [
            "/pause"
          ],
          "Env": [
            "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
          ],
          "Cwd": "/",
          "Capabilities": {
            "Ambient": [],
            "Bounding": [
              "CAP_CHOWN",
              "CAP_DAC_OVERRIDE",
              "CAP_FSETID",
              "CAP_FOWNER",
              "CAP_MKNOD",
              "CAP_NET_RAW",
              "CAP_SETGID",
              "CAP_SETUID",
              "CAP_SETFCAP",
              "CAP_SETPCAP",
              "CAP_NET_BIND_SERVICE",
              "CAP_SYS_CHROOT",
              "CAP_KILL",
              "CAP_AUDIT_WRITE"
            ],
            "Effective": [
              "CAP_CHOWN",
              "CAP_DAC_OVERRIDE",
              "CAP_FSETID",
              "CAP_FOWNER",
              "CAP_MKNOD",
              "CAP_NET_RAW",
              "CAP_SETGID",
              "CAP_SETUID",
              "CAP_SETFCAP",
              "CAP_SETPCAP",
              "CAP_NET_BIND_SERVICE",
              "CAP_SYS_CHROOT",
              "CAP_KILL",
              "CAP_AUDIT_WRITE"
            ],
            "Inheritable": [],
            "Permitted": [
              "CAP_CHOWN",
              "CAP_DAC_OVERRIDE",
              "CAP_FSETID",
              "CAP_FOWNER",
              "CAP_MKNOD",
              "CAP_NET_RAW",
              "CAP_SETGID",
              "CAP_SETUID",
              "CAP_SETFCAP",
              "CAP_SETPCAP",
              "CAP_NET_BIND_SERVICE",
              "CAP_SYS_CHROOT",
              "CAP_KILL",
              "CAP_AUDIT_WRITE"
            ]
          },
          "NoNewPrivileges": true
        },
        "Root": {
          "Path": "/run/kata-containers/shared/containers/$(bundle-id)",
          "Readonly": true
        },
        "Mounts": [
          {
            "destination": "/proc",
            "source": "proc",
            "type_": "proc",
            "options": [
              "nosuid",
              "noexec",
              "nodev"
            ]
          },
          {
            "destination": "/dev",
            "source": "tmpfs",
            "type_": "tmpfs",
            "options": [
              "nosuid",
              "strictatime",
              "mode=755",
              "size=65536k"
            ]
          },
          {
            "destination": "/dev/pts",
            "source": "devpts",
            "type_": "devpts",
            "options": [
              "nosuid",
              "noexec",
              "newinstance",
              "ptmxmode=0666",
              "mode=0620",
              "gid=5"
            ]
          },
          {
            "destination": "/dev/shm",
            "source": "/run/kata-containers/sandbox/shm",
            "type_": "bind",
            "options": [
              "rbind"
            ]
          },
          {
            "destination": "/dev/mqueue",
            "source": "mqueue",
            "type_": "mqueue",
            "options": [
              "nosuid",
              "noexec",
              "nodev"
            ]
          },
          {
            "destination": "/sys",
            "source": "sysfs",
            "type_": "sysfs",
            "options": [
              "nosuid",
              "noexec",
              "nodev",
              "ro"
            ]
          },
          {
            "destination": "/etc/resolv.conf",
            "source": "^/run/kata-containers/shared/containers/$(bundle-id)-[a-z0-9]{16}-resolv.conf$",
            "type_": "bind",
            "options": [
              "rbind",
              "ro",
              "nosuid",
              "nodev",
              "noexec"
            ]
          }
        ],
        "Annotations": {
          "io.katacontainers.pkg.oci.bundle_path": "/run/containerd/io.containerd.runtime.v2.task/k8s.io/$(bundle-id)",
          "io.katacontainers.pkg.oci.container_type": "pod_sandbox",
          "io.kubernetes.cri.container-type": "sandbox",
          "io.kubernetes.cri.sandbox-id": "^[a-z0-9]{64}$",
          "io.kubernetes.cri.sandbox-log-directory": "^/var/log/pods/$(sandbox-namespace)_$(sandbox-name)_[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
          "io.kubernetes.cri.sandbox-namespace": "default",
          "nerdctl/network-namespace": "^/var/run/netns/cni-[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
        },
        "Linux": {
          "Namespaces": [
            {
              "Type": "ipc",
              "Path": ""
            },
            {
              "Type": "uts",
              "Path": ""
            },
            {
              "Type": "mount",
              "Path": ""
            }
          ],
          "MaskedPaths": [
            "/proc/acpi",
            "/proc/asound",
            "/proc/kcore",
            "/proc/keys",
            "/proc/latency_stats",
            "/proc/timer_list",
            "/proc/timer_stats",
            "/proc/sched_debug",
            "/sys/firmware",
            "/proc/scsi"
          ],
          "ReadonlyPaths": [
            "/proc/bus",
            "/proc/fs",
            "/proc/irq",
            "/proc/sys",
            "/proc/sysrq-trigger"
          ]
        }
      },
      "storages": [
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=817250f1a3e336da76f5bd3fa784e1b26d959b9c131876815ba2604048b70c18"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/5a5aad80055ff20012a50dc25f8df7a29924474324d65f7d5306ee8ee27ff71d",
          "fs_group": null
        },
        {
          "driver": "overlayfs",
          "driver_options": [],
          "source": "",
          "fstype": "tar-overlay",
          "options": [
            "io.katacontainers.fs-opt.layer-src-prefix=/var/lib/containerd/io.containerd.snapshotter.v1.tardev/layers",
            "io.katacontainers.fs-opt.layer=NWE1YWFkODAwNTVmZjIwMDEyYTUwZGMyNWY4ZGY3YTI5OTI0NDc0MzI0ZDY1ZjdkNTMwNmVlOGVlMjdmZjcxZCx0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPTgxNzI1MGYxYTNlMzM2ZGE3NmY1YmQzZmE3ODRlMWIyNmQ5NTliOWMxMzE4NzY4MTViYTI2MDQwNDhiNzBjMTg=",
            "io.katacontainers.fs-opt.overlay-rw",
            "lowerdir=5a5aad80055ff20012a50dc25f8df7a29924474324d65f7d5306ee8ee27ff71d"
          ],
          "mount_point": "/run/kata-containers/shared/containers/$(bundle-id)",
          "fs_group": null
        }
      ],
      "exec_commands": []
    },
    {
      "OCI": {
        "Version": "1.1.0-rc.1",
        "Process": {
          "Terminal": false,
          "User": {
            "UID": 0,
            "GID": 0,
            "AdditionalGids": [],
            "Username": ""
          },
          "Args": [
            "/entrypoint.sh",
            "/start.sh"
          ],
          "Env": [
            "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
            "LANG=C.UTF-8",
            "GPG_KEY=0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D",
            "PYTHON_VERSION=3.6.3",
            "PYTHON_PIP_VERSION=9.0.1",
            "NGINX_VERSION=1.13.7-1~stretch",
            "NJS_VERSION=1.13.7.0.1.15-1~stretch",
            "UWSGI_INI=/app/uwsgi.ini",
            "NGINX_MAX_UPLOAD=0",
            "LISTEN_PORT=80",
            "STATIC_URL=/static",
            "STATIC_PATH=/app/static",
            "STATIC_INDEX=0",
            "PYTHONPATH=/app",
            "HOSTNAME=$(host-name)",
            "REDIS=azure-vote-back"
          ],
          "Cwd": "/app",
          "Capabilities": {
            "Ambient": [],
            "Bounding": [
              "CAP_CHOWN",
              "CAP_DAC_OVERRIDE",
              "CAP_FSETID",
              "CAP_FOWNER",
              "CAP_MKNOD",
              "CAP_NET_RAW",
              "CAP_SETGID",
              "CAP_SETUID",
              "CAP_SETFCAP",
              "CAP_SETPCAP",
              "CAP_NET_BIND_SERVICE",
              "CAP_SYS_CHROOT",
              "CAP_KILL",
              "CAP_AUDIT_WRITE"
            ],
            "Effective": [
              "CAP_CHOWN",
              "CAP_DAC_OVERRIDE",
              "CAP_FSETID",
              "CAP_FOWNER",
              "CAP_MKNOD",
              "CAP_NET_RAW",
              "CAP_SETGID",
              "CAP_SETUID",
              "CAP_SETFCAP",
              "CAP_SETPCAP",
              "CAP_NET_BIND_SERVICE",
              "CAP_SYS_CHROOT",
              "CAP_KILL",
              "CAP_AUDIT_WRITE"
            ],
            "Inheritable": [],
            "Permitted": [
              "CAP_CHOWN",
              "CAP_DAC_OVERRIDE",
              "CAP_FSETID",
              "CAP_FOWNER",
              "CAP_MKNOD",
              "CAP_NET_RAW",
              "CAP_SETGID",
              "CAP_SETUID",
              "CAP_SETFCAP",
              "CAP_SETPCAP",
              "CAP_NET_BIND_SERVICE",
              "CAP_SYS_CHROOT",
              "CAP_KILL",
              "CAP_AUDIT_WRITE"
            ]
          },
          "NoNewPrivileges": false
        },
        "Root": {
          "Path": "/run/kata-containers/shared/containers/$(bundle-id)",
          "Readonly": false
        },
        "Mounts": [
          {
            "destination": "/proc",
            "source": "proc",
            "type_": "proc",
            "options": [
              "nosuid",
              "noexec",
              "nodev"
            ]
          },
          {
            "destination": "/dev",
            "source": "tmpfs",
            "type_": "tmpfs",
            "options": [
              "nosuid",
              "strictatime",
              "mode=755",
              "size=65536k"
            ]
          },
          {
            "destination": "/dev/pts",
            "source": "devpts",
            "type_": "devpts",
            "options": [
              "nosuid",
              "noexec",
              "newinstance",
              "ptmxmode=0666",
              "mode=0620",
              "gid=5"
            ]
          },
          {
            "destination": "/dev/shm",
            "source": "/run/kata-containers/sandbox/shm",
            "type_": "bind",
            "options": [
              "rbind"
            ]
          },
          {
            "destination": "/dev/mqueue",
            "source": "mqueue",
            "type_": "mqueue",
            "options": [
              "nosuid",
              "noexec",
              "nodev"
            ]
          },
          {
            "destination": "/sys",
            "source": "sysfs",
            "type_": "sysfs",
            "options": [
              "nosuid",
              "noexec",
              "nodev",
              "ro"
            ]
          },
          {
            "destination": "/sys/fs/cgroup",
            "source": "cgroup",
            "type_": "cgroup",
            "options": [
              "nosuid",
              "noexec",
              "nodev",
              "relatime",
              "ro"
            ]
          },
          {
            "destination": "/etc/hosts",
            "source": "^/run/kata-containers/shared/containers/$(bundle-id)-[a-z0-9]{16}-hosts$",
            "type_": "bind",
            "options": [
              "rbind",
              "rprivate",
              "rw"
            ]
          },
          {
            "destination": "/dev/termination-log",
            "source": "^/run/kata-containers/shared/containers/$(bundle-id)-[a-z0-9]{16}-termination-log$",
            "type_": "bind",
            "options": [
              "rbind",
              "rprivate",
              "rw"
            ]
          },
          {
            "destination": "/etc/hostname",
            "source": "^/run/kata-containers/shared/containers/$(bundle-id)-[a-z0-9]{16}-hostname$",
            "type_": "bind",
            "options": [
              "rbind",
              "rprivate",
              "rw"
            ]
          },
          {
            "destination": "/etc/resolv.conf",
            "source": "^/run/kata-containers/shared/containers/$(bundle-id)-[a-z0-9]{16}-resolv.conf$",
            "type_": "bind",
            "options": [
              "rbind",
              "rprivate",
              "rw"
            ]
          },
          {
            "destination": "/var/run/secrets/kubernetes.io/serviceaccount",
            "source": "^/run/kata-containers/shared/containers/$(bundle-id)-[a-z0-9]{16}-serviceaccount$",
            "type_": "bind",
            "options": [
              "rbind",
              "rprivate",
              "ro"
            ]
          }
        ],
        "Annotations": {
          "io.katacontainers.pkg.oci.bundle_path": "/run/containerd/io.containerd.runtime.v2.task/k8s.io/$(bundle-id)",
          "io.katacontainers.pkg.oci.container_type": "pod_container",
          "io.kubernetes.cri.container-name": "azure-vote-front",
          "io.kubernetes.cri.container-type": "container",
          "io.kubernetes.cri.image-name": "mcr.microsoft.com/azuredocs/azure-vote-front:v1",
          "io.kubernetes.cri.sandbox-id": "^[a-z0-9]{64}$",
          "io.kubernetes.cri.sandbox-namespace": "default"
        },
        "Linux": {
          "Namespaces": [
            {
              "Type": "ipc",
              "Path": ""
            },
            {
              "Type": "uts",
              "Path": ""
            },
            {
              "Type": "mount",
              "Path": ""
            }
          ],
          "MaskedPaths": [
            "/proc/acpi",
            "/proc/kcore",
            "/proc/keys",
            "/proc/latency_stats",
            "/proc/timer_list",
            "/proc/timer_stats",
            "/proc/sched_debug",
            "/proc/scsi",
            "/sys/firmware"
          ],
          "ReadonlyPaths": [
            "/proc/asound",
            "/proc/bus",
            "/proc/fs",
            "/proc/irq",
            "/proc/sys",
            "/proc/sysrq-trigger"
          ]
        }
      },
      "storages": [
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=94d10f78eadf7df15cb26f977f881bdfb1f28d53ecd63ded8085df0b93590117"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/9febe2510b6c8577fb932a5ff0b2ba2ece603a417a66b876e4906aff57ac6035",
          "fs_group": null
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=369b4ac031add4b214889278d5ef533ee7968207dafa934bbb0759341a8e1682"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/cca2767438781c625502e62a692b0010c5587f190195f67369f6e8248980bfc2",
          "fs_group": null
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=27a93654037faba7dd07c8f2e05feb77eb838a73805f8189e0cca5759cb69bb9"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/2ad54ce5d7de5fe9bbe451b7bef643a6d8512ec43eabd287f16641e5bb06baa2",
          "fs_group": null
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=1579b8bfcbdaf9ae0338e6dc0999c1d2e54e5ee7b5f2a33de58fe4efb37d81f6"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/7eb9ab8b6a3e9b51fdfd7ec0562c74a3183fe264bcd1004182efd7bfeb355a5d",
          "fs_group": null
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=e3b038ec925948dd0def9ee92845ab3872d73760aa264595e4dbf380321fe269"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/511eda945e74eb1f31a6a86dc8c1b3344d9fc2b3035fe154261d9167ccdf36a4",
          "fs_group": null
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=d722faaf694fab4a933eff10ff351d2b8ca00739d10b68981f7af6c1d6fa6dac"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/aa22468ad8a3a7ff957bc8da92908bb0bb0495c5a417cda21ab708a077eabeaf",
          "fs_group": null
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=8a9b20b9a50116a3bb952aabb36cd79fdd560e6e4501e1174dbb400c1f855a69"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/f03ce24192d190abddb5fb815d04cb0e534c6739a48ed7a9b51b9e01eeb391db",
          "fs_group": null
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=f9977411ceb7203210253c99c4c2a1f4aac3be2fa43ad4d4735a5fbbb451b0d3"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/d9b2d9b4e5fc7f247ab0755eb1c1128c8cc0c58d0b4298bb75c68651ceb0161c",
          "fs_group": null
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=c396567a50cab40cb19d4617d973ccbd5a0f298f192eb11c53e44291b41fcf8f"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/1e5946f11b9fca2278839f7c057362e5260ad2266f4474dafa9d3e2a0e6ec945",
          "fs_group": null
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=1c1c3e6b65de2a066abd508a60dbcac7b0d4274cefe32d6f76c21737f71d87b7"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/42a9c1fb78db1fef5bc4fc6280eebdb3e831093dd71b8d5c809b6e3a3ffe155b",
          "fs_group": null
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=b4e5b803704fc22bf574ab308c782542873a6bc566c5f70d64411669c216bec7"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/1fc56a61ef52b0b96a756e0578e241baf6159376576fc41d8ed89b74a71d297f",
          "fs_group": null
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=281027656ebc3490c20578d487b95bc6e57e4da0ee7e9d7f8da07368e1dc9d8f"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/13da2307ebd318ba20dfae7f330c5531c39258343f8357871227a526290e7a38",
          "fs_group": null
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=bccf1a304645ed95a2e6fe558d2cc99924629f82962d4542330b0e2aa40be566"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/d9e8212a65a203ed164f183fde08aa71a0c577c045ec6da5b92ef2bb1abd4dea",
          "fs_group": null
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=2063fce085981ec1766065e8878ad397249c1a05535bec2c4003a50c4fd9820d"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/0b815423ecc3da215c8c6d03c2fb7a18028214236ec2e6b04406b0d1709c34a6",
          "fs_group": null
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=78e9720e9f23bd3e0749a15822d1b686135498f351ce7e3261d2fedcac66a916"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/28f0d6f556fb82d8213d66c5ec09b882414c5cf1d5127f11cb257590009de7c3",
          "fs_group": null
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=deaa6c97fb5ac71796e5dd7887eef193c6464a0d997d63fe600eb993f36c1897"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/fba22a7d735c5ffcfaa9113a84b424fea315fb481fb8ee2ccd25c0ce193e8600",
          "fs_group": null
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=c5511e997cd8dc399e10233288c5b834c72375ff65b6411e8e15f418ee80f118"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/d75817b08ef97b2e6c93fefde3049c871c37f7f3ad08c65ab98c084d1ef3cbb1",
          "fs_group": null
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=8693eaef7f468edbf6e65f58d9fc8da82095b8a5a887f1e50445d46313ef84a8"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/fa7b7175e07b786b86b14e2d517a64cb67cee10f76f3477a91d58df8e1953ffb",
          "fs_group": null
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=69ece190adf25ca6a9c48d840718c79140cf6ccca1c3ec8221a939f018a68790"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/ffca6b576a8c73feb7938782fdf88da460d3d2fb91ba243102cd32c0a162f848",
          "fs_group": null
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=199fff5bb0692b58fa932c25074e78d130ad198a900f6f2c2f728095e65343a5"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/65e444636c3b518035067beeae1c5f2aad7236d036e9071d20323108ae5bc936",
          "fs_group": null
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=d2ffe65bcb7ebb30a4f1677a082bf850e3a35cd7af17d0979b51e71dc1db62d4"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/e55d4720ff0ca5095dd222e594684aab6ef22c9d41752ff114c13c3d29cc5f2a",
          "fs_group": null
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=68d9bdaa7d21a603d5f74ca08506492c4a8025ea0ee19ad7d723df6a2d44110a"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/0c283880e38bfc47fb4968d77eb54f1a0f18bbbb371fed735de8a3ddb6d390f1",
          "fs_group": null
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=4181d0088d8d3cd07fae43f6664b4cb432c35b83271038ce9a8d449e7753888b"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/3ae09521798a111cb4941ed923dab692ef03b3b2cb6bf8760dbc28c47da9b065",
          "fs_group": null
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=f313f96dc75be41ddc77c5e810acd7251756da9c2acbe3e22339ef5430586886"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/b34f14ba425c32775eed4097dfb56a7ba7dd74627044c6f6e06cc69577ce02b3",
          "fs_group": null
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=470ed0326417fb84146b762aeadb90d1447407d34a76364e4a5555b85e63256e"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/cc81fe38a881c3681946e90fc264c42a4ed4252cfcd3cfc87a1178a2ee85e02e",
          "fs_group": null
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=22bafacc1486532f54f56cebc58ca090685e5d6e077f1c4543b6fa8fe0ce38f7"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/eb5f3c9510a1b0491327658ffc03bcc233f5814d60253ffcb7a39a2321d0439a",
          "fs_group": null
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=391106ccdf669e5b3748b3c73ad9b0b7eb9d2a3df403551702c003000c08f406"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/4cb796dfba42a9b5e545ab994506555f7ebaea24d7b1510deedd980278ef12d6",
          "fs_group": null
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=89ae4577e5de72f87d2a5739c9f0c6e8971f2b0d493ec10e915a7627fdbfc346"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/fd4bd2478206f57c74d90545942d999a7be485c97fd18f42d83e840db18ca36e",
          "fs_group": null
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=c2c6b4c5d808aa078528b81338ce576ae88be4802d930203c6e222ec86121c15"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/33be4bd8e5de43fc59be08350160b64ecc3ad6c678ee2107d6ab8ba9146d5fb5",
          "fs_group": null
        },
        {
          "driver": "overlayfs",
          "driver_options": [],
          "source": "",
          "fstype": "tar-overlay",
          "options": [
            "io.katacontainers.fs-opt.layer-src-prefix=/var/lib/containerd/io.containerd.snapshotter.v1.tardev/layers",
            "io.katacontainers.fs-opt.layer=OWZlYmUyNTEwYjZjODU3N2ZiOTMyYTVmZjBiMmJhMmVjZTYwM2E0MTdhNjZiODc2ZTQ5MDZhZmY1N2FjNjAzNSx0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPTk0ZDEwZjc4ZWFkZjdkZjE1Y2IyNmY5NzdmODgxYmRmYjFmMjhkNTNlY2Q2M2RlZDgwODVkZjBiOTM1OTAxMTc=",
            "io.katacontainers.fs-opt.layer=Y2NhMjc2NzQzODc4MWM2MjU1MDJlNjJhNjkyYjAwMTBjNTU4N2YxOTAxOTVmNjczNjlmNmU4MjQ4OTgwYmZjMix0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPTM2OWI0YWMwMzFhZGQ0YjIxNDg4OTI3OGQ1ZWY1MzNlZTc5NjgyMDdkYWZhOTM0YmJiMDc1OTM0MWE4ZTE2ODI=",
            "io.katacontainers.fs-opt.layer=MmFkNTRjZTVkN2RlNWZlOWJiZTQ1MWI3YmVmNjQzYTZkODUxMmVjNDNlYWJkMjg3ZjE2NjQxZTViYjA2YmFhMix0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPTI3YTkzNjU0MDM3ZmFiYTdkZDA3YzhmMmUwNWZlYjc3ZWI4MzhhNzM4MDVmODE4OWUwY2NhNTc1OWNiNjliYjk=",
            "io.katacontainers.fs-opt.layer=N2ViOWFiOGI2YTNlOWI1MWZkZmQ3ZWMwNTYyYzc0YTMxODNmZTI2NGJjZDEwMDQxODJlZmQ3YmZlYjM1NWE1ZCx0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPTE1NzliOGJmY2JkYWY5YWUwMzM4ZTZkYzA5OTljMWQyZTU0ZTVlZTdiNWYyYTMzZGU1OGZlNGVmYjM3ZDgxZjY=",
            "io.katacontainers.fs-opt.layer=NTExZWRhOTQ1ZTc0ZWIxZjMxYTZhODZkYzhjMWIzMzQ0ZDlmYzJiMzAzNWZlMTU0MjYxZDkxNjdjY2RmMzZhNCx0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPWUzYjAzOGVjOTI1OTQ4ZGQwZGVmOWVlOTI4NDVhYjM4NzJkNzM3NjBhYTI2NDU5NWU0ZGJmMzgwMzIxZmUyNjk=",
            "io.katacontainers.fs-opt.layer=YWEyMjQ2OGFkOGEzYTdmZjk1N2JjOGRhOTI5MDhiYjBiYjA0OTVjNWE0MTdjZGEyMWFiNzA4YTA3N2VhYmVhZix0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPWQ3MjJmYWFmNjk0ZmFiNGE5MzNlZmYxMGZmMzUxZDJiOGNhMDA3MzlkMTBiNjg5ODFmN2FmNmMxZDZmYTZkYWM=",
            "io.katacontainers.fs-opt.layer=ZjAzY2UyNDE5MmQxOTBhYmRkYjVmYjgxNWQwNGNiMGU1MzRjNjczOWE0OGVkN2E5YjUxYjllMDFlZWIzOTFkYix0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPThhOWIyMGI5YTUwMTE2YTNiYjk1MmFhYmIzNmNkNzlmZGQ1NjBlNmU0NTAxZTExNzRkYmI0MDBjMWY4NTVhNjk=",
            "io.katacontainers.fs-opt.layer=ZDliMmQ5YjRlNWZjN2YyNDdhYjA3NTVlYjFjMTEyOGM4Y2MwYzU4ZDBiNDI5OGJiNzVjNjg2NTFjZWIwMTYxYyx0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPWY5OTc3NDExY2ViNzIwMzIxMDI1M2M5OWM0YzJhMWY0YWFjM2JlMmZhNDNhZDRkNDczNWE1ZmJiYjQ1MWIwZDM=",
            "io.katacontainers.fs-opt.layer=MWU1OTQ2ZjExYjlmY2EyMjc4ODM5ZjdjMDU3MzYyZTUyNjBhZDIyNjZmNDQ3NGRhZmE5ZDNlMmEwZTZlYzk0NSx0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPWMzOTY1NjdhNTBjYWI0MGNiMTlkNDYxN2Q5NzNjY2JkNWEwZjI5OGYxOTJlYjExYzUzZTQ0MjkxYjQxZmNmOGY=",
            "io.katacontainers.fs-opt.layer=NDJhOWMxZmI3OGRiMWZlZjViYzRmYzYyODBlZWJkYjNlODMxMDkzZGQ3MWI4ZDVjODA5YjZlM2EzZmZlMTU1Yix0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPTFjMWMzZTZiNjVkZTJhMDY2YWJkNTA4YTYwZGJjYWM3YjBkNDI3NGNlZmUzMmQ2Zjc2YzIxNzM3ZjcxZDg3Yjc=",
            "io.katacontainers.fs-opt.layer=MWZjNTZhNjFlZjUyYjBiOTZhNzU2ZTA1NzhlMjQxYmFmNjE1OTM3NjU3NmZjNDFkOGVkODliNzRhNzFkMjk3Zix0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPWI0ZTViODAzNzA0ZmMyMmJmNTc0YWIzMDhjNzgyNTQyODczYTZiYzU2NmM1ZjcwZDY0NDExNjY5YzIxNmJlYzc=",
            "io.katacontainers.fs-opt.layer=MTNkYTIzMDdlYmQzMThiYTIwZGZhZTdmMzMwYzU1MzFjMzkyNTgzNDNmODM1Nzg3MTIyN2E1MjYyOTBlN2EzOCx0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPTI4MTAyNzY1NmViYzM0OTBjMjA1NzhkNDg3Yjk1YmM2ZTU3ZTRkYTBlZTdlOWQ3ZjhkYTA3MzY4ZTFkYzlkOGY=",
            "io.katacontainers.fs-opt.layer=ZDllODIxMmE2NWEyMDNlZDE2NGYxODNmZGUwOGFhNzFhMGM1NzdjMDQ1ZWM2ZGE1YjkyZWYyYmIxYWJkNGRlYSx0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPWJjY2YxYTMwNDY0NWVkOTVhMmU2ZmU1NThkMmNjOTk5MjQ2MjlmODI5NjJkNDU0MjMzMGIwZTJhYTQwYmU1NjY=",
            "io.katacontainers.fs-opt.layer=MGI4MTU0MjNlY2MzZGEyMTVjOGM2ZDAzYzJmYjdhMTgwMjgyMTQyMzZlYzJlNmIwNDQwNmIwZDE3MDljMzRhNix0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPTIwNjNmY2UwODU5ODFlYzE3NjYwNjVlODg3OGFkMzk3MjQ5YzFhMDU1MzViZWMyYzQwMDNhNTBjNGZkOTgyMGQ=",
            "io.katacontainers.fs-opt.layer=MjhmMGQ2ZjU1NmZiODJkODIxM2Q2NmM1ZWMwOWI4ODI0MTRjNWNmMWQ1MTI3ZjExY2IyNTc1OTAwMDlkZTdjMyx0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPTc4ZTk3MjBlOWYyM2JkM2UwNzQ5YTE1ODIyZDFiNjg2MTM1NDk4ZjM1MWNlN2UzMjYxZDJmZWRjYWM2NmE5MTY=",
            "io.katacontainers.fs-opt.layer=ZmJhMjJhN2Q3MzVjNWZmY2ZhYTkxMTNhODRiNDI0ZmVhMzE1ZmI0ODFmYjhlZTJjY2QyNWMwY2UxOTNlODYwMCx0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPWRlYWE2Yzk3ZmI1YWM3MTc5NmU1ZGQ3ODg3ZWVmMTkzYzY0NjRhMGQ5OTdkNjNmZTYwMGViOTkzZjM2YzE4OTc=",
            "io.katacontainers.fs-opt.layer=ZDc1ODE3YjA4ZWY5N2IyZTZjOTNmZWZkZTMwNDljODcxYzM3ZjdmM2FkMDhjNjVhYjk4YzA4NGQxZWYzY2JiMSx0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPWM1NTExZTk5N2NkOGRjMzk5ZTEwMjMzMjg4YzViODM0YzcyMzc1ZmY2NWI2NDExZThlMTVmNDE4ZWU4MGYxMTg=",
            "io.katacontainers.fs-opt.layer=ZmE3YjcxNzVlMDdiNzg2Yjg2YjE0ZTJkNTE3YTY0Y2I2N2NlZTEwZjc2ZjM0NzdhOTFkNThkZjhlMTk1M2ZmYix0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPTg2OTNlYWVmN2Y0NjhlZGJmNmU2NWY1OGQ5ZmM4ZGE4MjA5NWI4YTVhODg3ZjFlNTA0NDVkNDYzMTNlZjg0YTg=",
            "io.katacontainers.fs-opt.layer=ZmZjYTZiNTc2YThjNzNmZWI3OTM4NzgyZmRmODhkYTQ2MGQzZDJmYjkxYmEyNDMxMDJjZDMyYzBhMTYyZjg0OCx0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPTY5ZWNlMTkwYWRmMjVjYTZhOWM0OGQ4NDA3MThjNzkxNDBjZjZjY2NhMWMzZWM4MjIxYTkzOWYwMThhNjg3OTA=",
            "io.katacontainers.fs-opt.layer=NjVlNDQ0NjM2YzNiNTE4MDM1MDY3YmVlYWUxYzVmMmFhZDcyMzZkMDM2ZTkwNzFkMjAzMjMxMDhhZTViYzkzNix0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPTE5OWZmZjViYjA2OTJiNThmYTkzMmMyNTA3NGU3OGQxMzBhZDE5OGE5MDBmNmYyYzJmNzI4MDk1ZTY1MzQzYTU=",
            "io.katacontainers.fs-opt.layer=ZTU1ZDQ3MjBmZjBjYTUwOTVkZDIyMmU1OTQ2ODRhYWI2ZWYyMmM5ZDQxNzUyZmYxMTRjMTNjM2QyOWNjNWYyYSx0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPWQyZmZlNjViY2I3ZWJiMzBhNGYxNjc3YTA4MmJmODUwZTNhMzVjZDdhZjE3ZDA5NzliNTFlNzFkYzFkYjYyZDQ=",
            "io.katacontainers.fs-opt.layer=MGMyODM4ODBlMzhiZmM0N2ZiNDk2OGQ3N2ViNTRmMWEwZjE4YmJiYjM3MWZlZDczNWRlOGEzZGRiNmQzOTBmMSx0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPTY4ZDliZGFhN2QyMWE2MDNkNWY3NGNhMDg1MDY0OTJjNGE4MDI1ZWEwZWUxOWFkN2Q3MjNkZjZhMmQ0NDExMGE=",
            "io.katacontainers.fs-opt.layer=M2FlMDk1MjE3OThhMTExY2I0OTQxZWQ5MjNkYWI2OTJlZjAzYjNiMmNiNmJmODc2MGRiYzI4YzQ3ZGE5YjA2NSx0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPTQxODFkMDA4OGQ4ZDNjZDA3ZmFlNDNmNjY2NGI0Y2I0MzJjMzViODMyNzEwMzhjZTlhOGQ0NDllNzc1Mzg4OGI=",
            "io.katacontainers.fs-opt.layer=YjM0ZjE0YmE0MjVjMzI3NzVlZWQ0MDk3ZGZiNTZhN2JhN2RkNzQ2MjcwNDRjNmY2ZTA2Y2M2OTU3N2NlMDJiMyx0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPWYzMTNmOTZkYzc1YmU0MWRkYzc3YzVlODEwYWNkNzI1MTc1NmRhOWMyYWNiZTNlMjIzMzllZjU0MzA1ODY4ODY=",
            "io.katacontainers.fs-opt.layer=Y2M4MWZlMzhhODgxYzM2ODE5NDZlOTBmYzI2NGM0MmE0ZWQ0MjUyY2ZjZDNjZmM4N2ExMTc4YTJlZTg1ZTAyZSx0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPTQ3MGVkMDMyNjQxN2ZiODQxNDZiNzYyYWVhZGI5MGQxNDQ3NDA3ZDM0YTc2MzY0ZTRhNTU1NWI4NWU2MzI1NmU=",
            "io.katacontainers.fs-opt.layer=ZWI1ZjNjOTUxMGExYjA0OTEzMjc2NThmZmMwM2JjYzIzM2Y1ODE0ZDYwMjUzZmZjYjdhMzlhMjMyMWQwNDM5YSx0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPTIyYmFmYWNjMTQ4NjUzMmY1NGY1NmNlYmM1OGNhMDkwNjg1ZTVkNmUwNzdmMWM0NTQzYjZmYThmZTBjZTM4Zjc=",
            "io.katacontainers.fs-opt.layer=NGNiNzk2ZGZiYTQyYTliNWU1NDVhYjk5NDUwNjU1NWY3ZWJhZWEyNGQ3YjE1MTBkZWVkZDk4MDI3OGVmMTJkNix0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPTM5MTEwNmNjZGY2NjllNWIzNzQ4YjNjNzNhZDliMGI3ZWI5ZDJhM2RmNDAzNTUxNzAyYzAwMzAwMGMwOGY0MDY=",
            "io.katacontainers.fs-opt.layer=ZmQ0YmQyNDc4MjA2ZjU3Yzc0ZDkwNTQ1OTQyZDk5OWE3YmU0ODVjOTdmZDE4ZjQyZDgzZTg0MGRiMThjYTM2ZSx0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPTg5YWU0NTc3ZTVkZTcyZjg3ZDJhNTczOWM5ZjBjNmU4OTcxZjJiMGQ0OTNlYzEwZTkxNWE3NjI3ZmRiZmMzNDY=",
            "io.katacontainers.fs-opt.layer=MzNiZTRiZDhlNWRlNDNmYzU5YmUwODM1MDE2MGI2NGVjYzNhZDZjNjc4ZWUyMTA3ZDZhYjhiYTkxNDZkNWZiNSx0YXIscm8saW8ua2F0YWNvbnRhaW5lcnMuZnMtb3B0LmJsb2NrX2RldmljZT1maWxlLGlvLmthdGFjb250YWluZXJzLmZzLW9wdC5pcy1sYXllcixpby5rYXRhY29udGFpbmVycy5mcy1vcHQucm9vdC1oYXNoPWMyYzZiNGM1ZDgwOGFhMDc4NTI4YjgxMzM4Y2U1NzZhZTg4YmU0ODAyZDkzMDIwM2M2ZTIyMmVjODYxMjFjMTU=",
            "io.katacontainers.fs-opt.overlay-rw",
            "lowerdir=9febe2510b6c8577fb932a5ff0b2ba2ece603a417a66b876e4906aff57ac6035:cca2767438781c625502e62a692b0010c5587f190195f67369f6e8248980bfc2:2ad54ce5d7de5fe9bbe451b7bef643a6d8512ec43eabd287f16641e5bb06baa2:7eb9ab8b6a3e9b51fdfd7ec0562c74a3183fe264bcd1004182efd7bfeb355a5d:511eda945e74eb1f31a6a86dc8c1b3344d9fc2b3035fe154261d9167ccdf36a4:aa22468ad8a3a7ff957bc8da92908bb0bb0495c5a417cda21ab708a077eabeaf:f03ce24192d190abddb5fb815d04cb0e534c6739a48ed7a9b51b9e01eeb391db:d9b2d9b4e5fc7f247ab0755eb1c1128c8cc0c58d0b4298bb75c68651ceb0161c:1e5946f11b9fca2278839f7c057362e5260ad2266f4474dafa9d3e2a0e6ec945:42a9c1fb78db1fef5bc4fc6280eebdb3e831093dd71b8d5c809b6e3a3ffe155b:1fc56a61ef52b0b96a756e0578e241baf6159376576fc41d8ed89b74a71d297f:13da2307ebd318ba20dfae7f330c5531c39258343f8357871227a526290e7a38:d9e8212a65a203ed164f183fde08aa71a0c577c045ec6da5b92ef2bb1abd4dea:0b815423ecc3da215c8c6d03c2fb7a18028214236ec2e6b04406b0d1709c34a6:28f0d6f556fb82d8213d66c5ec09b882414c5cf1d5127f11cb257590009de7c3:fba22a7d735c5ffcfaa9113a84b424fea315fb481fb8ee2ccd25c0ce193e8600:d75817b08ef97b2e6c93fefde3049c871c37f7f3ad08c65ab98c084d1ef3cbb1:fa7b7175e07b786b86b14e2d517a64cb67cee10f76f3477a91d58df8e1953ffb:ffca6b576a8c73feb7938782fdf88da460d3d2fb91ba243102cd32c0a162f848:65e444636c3b518035067beeae1c5f2aad7236d036e9071d20323108ae5bc936:e55d4720ff0ca5095dd222e594684aab6ef22c9d41752ff114c13c3d29cc5f2a:0c283880e38bfc47fb4968d77eb54f1a0f18bbbb371fed735de8a3ddb6d390f1:3ae09521798a111cb4941ed923dab692ef03b3b2cb6bf8760dbc28c47da9b065:b34f14ba425c32775eed4097dfb56a7ba7dd74627044c6f6e06cc69577ce02b3:cc81fe38a881c3681946e90fc264c42a4ed4252cfcd3cfc87a1178a2ee85e02e:eb5f3c9510a1b0491327658ffc03bcc233f5814d60253ffcb7a39a2321d0439a:4cb796dfba42a9b5e545ab994506555f7ebaea24d7b1510deedd980278ef12d6:fd4bd2478206f57c74d90545942d999a7be485c97fd18f42d83e840db18ca36e:33be4bd8e5de43fc59be08350160b64ecc3ad6c678ee2107d6ab8ba9146d5fb5"
          ],
          "mount_point": "/run/kata-containers/shared/containers/$(bundle-id)",
          "fs_group": null
        }
      ],
      "exec_commands": []
    }
  ],
  "request_defaults": {
    "CopyFileRequest": [
      "^/run/kata-containers/shared/containers/"
    ],
    "ExecProcessRequest": [],
    "ReadStreamRequest": false,
    "WriteStreamRequest": false
  }
}
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      runtimeClassName: kata-cc
      containers:
        - name: azure-vote-front
          image: "mcr.microsoft.com/azuredocs/azure-vote-front:v1"
          env:
            - name: REDIS
              value: azure-vote-back
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 250m
              memory: 256Mi
          ports:
            - containerPort: 80
